- name: "NOTSCORED | 6.1.1 | PATCH | Audit system file permissions"
  command: /bin/true
  tags:
      - level2
      - patch
      - rule_6.1.1

- name: "SCORED | 6.1.2 | PATCH | Ensure permissions on /etc/passwd are configured"
  file:
      dest: /etc/passwd
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.2

- name: "SCORED | 6.1.3 | PATCH | Ensure permissions on /etc/shadow are configured"
  file:
      dest: /etc/shadow
      owner: root
      group: root
      mode: 0000
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.3

- name: "SCORED | 6.1.4 | PATCH | Ensure permissions on /etc/group are configured"
  file:
      dest: /etc/group
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.4

- name: "SCORED | 6.1.5 | PATCH | Ensure permissions on /etc/gshadow are configured"
  file:
      dest: /etc/gshadow
      owner: root
      group: root
      mode: 0000
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.5

- name: "SCORED | 6.1.6 | PATCH | Ensure permissions on /etc/passwd- are configured"
  file:
      dest: /etc/passwd-
      owner: root
      group: root
      mode: 0644
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.6

- name: "SCORED | 6.1.7 | PATCH | Ensure permissions on /etc/shadow- are configured"
  file:
      dest: /etc/shadow-
      owner: root
      group: root
      mode: 0000
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.7

- name: "SCORED | 6.1.8 | PATCH | Ensure permissions on /etc/group- are configured"
  file:
      dest: /etc/group-
      owner: root
      group: root
      mode: 0600
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.8

- name: "SCORED | 6.1.9 | PATCH | Ensure permissions on /etc/gshadow- are configured"
  file:
      dest: /etc/gshadow-
      owner: root
      group: root
      mode: 0600
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.1.9

- name: "SCORED | 6.1.10 | PATCH | Ensure no world writable files exist"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.10

- name: "SCORED | 6.1.11 | PATCH | Ensure no unowned files or directories exist"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.11

- name: "SCORED | 6.1.12 | PATCH | Ensure no ungrouped files or directories exist"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.12

- name: "NOTSCORED | 6.1.13 | PATCH | Audit SUID executables"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.13

- name: "NOTSCORED | 6.1.14 | PATCH | Audit SGID executables"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.1.14

- name: "SCORED | 6.2.1 | PATCH | Ensure password fields are not empty"
  command: passwd -l {{ item }}
  with_items: "{{ empty_password_accounts.stdout_lines }}"
  when: empty_password_accounts.rc
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.2.1

- name: "SCORED | 6.2.2 | PATCH | Ensure no legacy '+' entries exist in /etc/passwd"
  command: sed -i '/^+/ d' /etc/passwd
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.2

- name: "SCORED | 6.2.3 | PATCH | Ensure no legacy '+' entries exist in /etc/shadow"
  command: sed -i '/^+/ d' /etc/shadow
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.2.3

- name: "SCORED | 6.2.4 | PATCH | Ensure no legacy '+' entries exist in /etc/group"
  command: sed -i '/^+/ d' /etc/group
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.2.4

- name: "SCORED | 6.2.5 | PATCH | Ensure root is the only UID 0 account"
  command: passwd -l {{ item }}
  with_items: "{{ uid_zero_accounts_except_root.stdout_lines }}"
  when: uid_zero_accounts_except_root.rc
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.2.5

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  copy:
    src: scripts/6.2.6.sh
    dest: /opt/6.2.6.sh
    owner: root
    group: root
    mode: 0700
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.6

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  shell: /opt/6.2.6.sh
  args:
    executable: /bin/bash
  register: root_path_integrity
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.6

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  debug:
    var: root_path_integrity.stdout_lines
  when:
    - root_path_integrity.stdout != ""
    - not ansible_check_mode
    - root_path_integrity is defined
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.6

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  debug:
    msg: "PASS | 6.2.6 | root PATH integrity"
  when:
    - root_path_integrity.stdout == ""
    - root_path_integrity is defined
    - not ansible_check_mode
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.6

- name: "SCORED | 6.2.6 | PATCH | Ensure root PATH Integrity"
  file:
    path: /opt/6.2.6.sh
    owner: root
    group: root
    state: absent
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.6

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  copy:
    src: scripts/6.2.7.sh
    dest: /opt/6.2.7.sh
    owner: root
    group: root
    mode: 0700
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.7

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  shell: /opt/6.2.7.sh
  args:
    executable: /bin/bash
  register: home_directories_exist
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.7

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  debug:
    var: home_directories_exist.stdout_lines
  when:
    - home_directories_exist.stdout != ""
    - not ansible_check_mode
    - home_directories_exist is defined
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.7

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  debug:
    msg: "PASS | 6.2.7 | All users' home directories exist."
  when:
    - home_directories_exist.stdout == ""
    - home_directories_exist is defined
    - not ansible_check_mode
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.7

- name: "SCORED | 6.2.7 | PATCH | Ensure all users' home directories exist"
  file:
    path: /opt/6.2.7.sh
    owner: root
    group: root
    state: absent
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.7

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  copy:
    src: scripts/6.2.8.sh
    dest: /opt/6.2.8.sh
    owner: root
    group: root
    mode: 0700
  when: centos7cis_modify_user_homes
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.8

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  shell: /opt/6.2.8.sh
  args:
    executable: /bin/bash
  register: home_directories_permissions
  when: centos7cis_modify_user_homes
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.8

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  debug:
    var: home_directories_permissions.stdout_lines
  when:
    - centos7cis_modify_user_homes
    - not ansible_check_mode
    - home_directories_permissions is defined
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.8

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  debug:
    msg: "PASS | 6.2.8 | Users' home directories permissions are 750 or more restrictive."
  when:
    - home_directories_permissions.stdout == ""
    - centos7cis_modify_user_homes
    - home_directories_permissions is defined
    - not ansible_check_mode
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.8

- name: "SCORED | 6.2.8 | PATCH | Ensure users' home directories permissions are 750 or more restrictive"
  file:
    path: /opt/6.2.8.sh
    owner: root
    group: root
    state: absent
  when: centos7cis_modify_user_homes
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.8

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  copy:
    src: scripts/6.2.9.sh
    dest: /opt/6.2.9.sh
    owner: root
    group: root
    mode: 0700
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.9

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  shell: /opt/6.2.9.sh
  args:
    executable: /bin/bash
  register: home_directories_own
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.9

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  debug:
    var: home_directories_own.stdout_lines
  when:
    - not ansible_check_mode
    - home_directories_own is defined
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.9

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  debug:
    msg: "PASS | 6.2.9 | Users' own their home directories."
  when:
    - home_directories_own is defined
    - home_directories_own.stdout == ""
    - not ansible_check_mode
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.9

- name: "SCORED | 6.2.9 | PATCH | Ensure users own their home directories"
  file:
    path: /opt/6.2.9.sh
    owner: root
    group: root
    state: absent
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.9

- name: "SCORED | 6.2.10 | PATCH | Ensure users' dot files are not group or world writable"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.10

- name: "SCORED | 6.2.11 | PATCH | Ensure no users have .forward files"
  file:
      state: absent
      dest: "~{{ item }}/.forward"
  with_items: "{{ users.stdout_lines }}"
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.2.11

- name: "SCORED | 6.2.12 | PATCH | Ensure no users have .netrc files"
  file:
      state: absent
      dest: "~{{ item }}/.netrc"
  with_items: "{{ users.stdout_lines }}"
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.2.12

# - name: "SCORED | 6.2.13 | PATCH | Ensure users' .netrc Files are not group or world accessible"
#   file:
#       mode: 0600
#       dest: "~{{ item }}/.netrc"
#   with_items: "{{ users.stdout_lines }}"
#   tags:
#       - level1
#       - level2
#       - patch
#       - rule_6.2.13

- name: "SCORED | 6.2.14 | PATCH | Ensure no users have .rhosts files"
  file:
      state: absent
      dest: "~{{ item }}/.rhosts"
  with_items: "{{ users.stdout_lines }}"
  tags:
      - level1
      - level2
      - low
      - patch
      - rule_6.2.14

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group"
  script: /etc/ansible/roles/centos7cis/scripts/rule_six_two_fifteen.sh
  ignore_errors: yes
  register: centos7_cis_rule_6_2_15_results
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.15

- name: "SCORED | 6.2.15 | PATCH | Ensure all groups in /etc/passwd exist in /etc/group | Print Out"
  debug:
    var: centos7_cis_rule_6_2_15_results
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.15

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  copy:
    src: scripts/6.2.16.sh
    dest: /opt/6.2.16.sh
    owner: root
    group: root
    mode: 0700
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.16

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  shell: /opt/6.2.16.sh
  args:
    executable: /bin/bash
  register: duplicate_uids
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.16

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  debug:
    var: duplicate_uids.stdout_lines
  when:
    - not ansible_check_mode
    - duplicate_uids is defined
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.16

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  debug:
    msg: "PASS | 6.2.16 | No duplicate UIDs exist."
  when:
    - duplicate_uids is defined
    - duplicate_uids.stdout == ""
    - not ansible_check_mode
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.16

- name: "SCORED | 6.2.16 | PATCH | Ensure no duplicate UIDs exist"
  file:
    path: /opt/6.2.16.sh
    owner: root
    group: root
    state: absent
  ignore_errors: "{{ ansible_check_mode }}"
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.16

- name: "SCORED | 6.2.17 | PATCH | Ensure no duplicate GIDs exist"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.17

- name: "SCORED | 6.2.18 | PATCH | Ensure no duplicate user names exist"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.18

- name: "SCORED | 6.2.19 | PATCH | Ensure no duplicate group names exist"
  command: /bin/true
  tags:
      - level1
      - level2
      - patch
      - rule_6.2.19
